<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="book"><!--데이터 베이스 테이블 의미 -->
<insert id="insert" parameterType="hashMap" useGeneratedKeys="true" keyProperty="book_id">
	<![CDATA[
	insert into book
	(title, category, price)
	values
	(#{title}, #{category}, #{price})
	]]>
</insert>
<select id="select_detail" parameterType="hashMap" resultType="hashMap">
    <![CDATA[
        select
        title,
        category,
        price,
 insert_date
        from
        book
        where
        book_id = #{bookId}   
    ]]>
</select>
<!-- 
데이터베이스에서 데이터를 수정하는 쿼리는 UPDATE이다 
update 테이블명 set 컬럼들 where 조건
-->
<update id="update" parameterType="hashMap">
<![CDATA[
update book set
title = #{title},
category = #{category},
price = #{price}
where
book_id = #{bookId}
]]>
</update>
<!-- 
삭제기능 만들기 
DELETE FROM 테이블명 WHERE 조건
DELETE FROM book where book_id = 1
-->
<delete id="delete" parameterType="hashMap">
<![CDATA[
delete from book
where
book_id = #{bookId}
]]>
</delete>
<!-- 목록 최신순으로 보여지게 된다 resultType="hashMap" 한행을 담는 타입-->
<select id="select_list" parameterType="hashMap" resultType="hashMap">
<![CDATA[
select
book_id,
title,
category,
price,
insert_date
from
book
where 1 = 1
]]><!-- where 1 = 1은 관습적인 구문이다  1= 1 늘참이기 때문에 무조건 and로 연결하기 위해 사용한다 -->
<if test="keyword != null and keyword != ''"><!-- test 조거 규칙을 나타낸다 만약 키워드가 있으면-->
and (title like CONCAT('%',#{keyword},'%') or category like CONCAT('%',#{keyword},'%'))
<!-- 마이바티스는  <![CDATA[ 항목안에 if 등의 구문은 열로 취급되서 해석되지 않기에 -->
</if>
<!-- 
title like '검색어%' => 검색어로 시작한다는 의미
title like '%검색어' => 검색어로 끝난다는 의미
title like '%검색어%' => 검색어를 포함한다는 의미이다
마이바티스에서는 쿼리파라미터에 '표시를 붙이지 않기 때문에 title like '%검색어%'형식으로 표현하기 힘들기 때문에
CONCAT함수를 이용해서 문자열을 이어붙인다
위에 조건에 or 둘중에 하나 검색되면 참으로 정렬된다
 -->
order by insert_date desc
</select>
</mapper>
<!-- Character Data : XML마크업으로 해석하지 않아야 하는 데이터를 포함한다는 것을 의미 
parameterType="hashMap" : 비즈니스로직으로 전달받은 SQL구문에 사용될 매개변수의 자료형
useGeneratedKeys="true" : 자동생성된 키 값들을 가져올거라는것을 명시합니다
keyProperty="book_id" : 쿼리실행후 기본키 또는 원하는 값을 가져올때 사용
-->